/**

FIVONACCI EVEN TERM SUM

Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:

1,2,3,5,8,13,21,34,55,89 ...

By considering the terms in the Fibonacci sequence whose values do not exceed N, 
find the sum of the even-valued terms.

Input Format:
First line contains T that denotes the number of test cases. This is followed by T lines, each containing an integer, N.


Constraints:
1 <= T <= 10^5
10 <= N <= 4 x 10^16


Output Format:
Print the required answer for each test case.

Sample Input:
2
10
100

Sample Output:
10
44
 */

/**
 * Approch:
 * 1. first define the n1 = 0n, n2 = 1n and sum = 0n as BigInt
 * 2. calculate next fabonacci number as next = n1 + n2
 * 3. Now execute the while loop until next < N 
 * 4. if the next is even then sum = sum + next
 * 5. Update the n1 = n2, n2 = next and next = n1 + n2
 * 6. return the sum
 */

function fibonnaciEvenSum(n) {
  n = BigInt(n);
  n1 = 0n
  n2 = 1n

  var sum = 0n;
  next = n1 + n2;
  while (next < n) {
    if (next % 2n === 0n) {
      sum = sum + next;
    }
    n1 = n2;
    n2 = next;
    next = n1 + n2;
  }

  return BigInt(sum).toString();
}

var N = 10;
var sum = fibonnaciEvenSum(N);
console.log(`N = ${N}, output = ${sum}`)

var N = 100;
var sum = fibonnaciEvenSum(N);
console.log(`N = ${N}, output = ${sum}`)